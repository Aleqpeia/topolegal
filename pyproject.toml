[tool.poetry]
name = "legal_graph"
version = "0.1.0"
description = "LLM knowledge usage in graph neural network for highly accurate multi-task modular AI/ML system"
authors = [
    "Illia Savenko <savenko.ilya@lll.kpi.ua>",
    "Mykyta Bobylyow <mbobylyov@biph.kiev.ua>"
]
readme = "README.md"
packages = [{ include = "legal_graph", from = "src" }]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
pydantic = "^2.0.0"
langchain-community = "^0.0.29"
openai = "^1.0.0"
networkx = "^3.0"
numpy = "1.25.2"
pandas = "2.0.3"
matplotlib = "3.7.3"
seaborn = "0.12.2"
tqdm = "^4.66.1"
langdetect = "^1.0.9"
openpyxl = "^3.1.2"
nltk = "^3.8.1"
sentence-transformers = "^2.2.2"
transformers = "^4.35.0"
beautifulsoup4 = "^4.12.2"
hydra-core = "^1.3.2"
tensorboard = "^2.15.1"
html5lib = "^1.1"
jupyterlab = "^4.0.8"
iso8601 = "^2.1.0"
rfc3339 = "^6.2"
wordcloud = "^1.9.2"
datasets = "^2.14.6"
pyldavis = "^3.4.1"
bertopic = "^0.15.0"
kaggle = "^1.5.16"
spacy = "^3.7.2"
eli5 = "^0.13.0"
ipywidgets = "^8.1.1"
jupyterlab-widgets = "^3.0.9"
fastparquet = "^2023.10.1"
langid = "^1.1.6"
ydata-profiling = "^4.6.1"
torch = "2.5.1"
torchvision = "0.20.1"
torchtext = "^0.18.0"
torch-geometric = "^2.6.1"
torch-scatter = { version = "*", source = "pyg" }
torch-sparse = { version = "*", source = "pyg" }
torch-cluster = { version = "*", source = "pyg" }
scipy = "^1.13.0"
tensorboardx = "2.6.2.2"
google-cloud-bigquery = "^3.24.0"
db-dtypes = "^1.4.3"
google-cloud-bigquery-storage = "2.24.0"
torchdrug = "^0.2.1"
pyfunctional = "^1.5.0"
jmespath = "^1.0.1"
plotly = "^6.2.0"
ipympl = "^0.9.7"



[[tool.poetry.source]]
name = "pypi"
priority = "primary"

[[tool.poetry.source]]
name = "pyg"
url = "https://data.pyg.org/whl/torch-2.5.0+cpu.html"
priority = "explicit"

[build-system]
requires = ["poetry-core>=2.0.0,<3.0.0"]
build-backend = "poetry.core.masonry.api"